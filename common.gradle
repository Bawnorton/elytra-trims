apply plugin: 'maven-publish'
apply plugin: 'fabric-loom'
apply plugin: 'io.github.juuxel.loom-quiltflower'
apply plugin: 'com.replaymod.preprocess'
apply plugin: 'me.fallenbreath.yamlang'
apply plugin: 'com.modrinth.minotaur'

int mcVersion = 1

preprocess {
    mcVersion = vars.get()["MC"]
    tabIndentation = false
}

repositories {
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url 'https://maven.isxander.dev/releases' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://plugins.gradle.org/m2/" }
}

// https://github.com/FabricMC/fabric-loader/issues/783
configurations {
    modRuntimeOnly.exclude group: 'net.fabricmc', module: 'fabric-loader'
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    include api(annotationProcessor("com.github.LlamaLad7.mixinextras:mixinextras-fabric:${project.mixin_extras_version}"))

    if (mcVersion < 12000) {
        modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
        modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
            exclude(group: "net.fabricmc.fabric-api")
        }
        modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:${yacl_version}"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/elytratrims.accesswidener")

    runConfigs.all {
        // to make sure it generates all "Minecraft Client (:subproject_name)" applications
        ideConfigGenerated = true
        runDir '../../run'
        vmArgs '-Dmixin.debug.export=true'
    }
}

remapJar {
    remapperIsolation = true
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = project.maven_group
archivesBaseName = project.archives_base_name + "-" + project.mod_version + "+" + project.game_versions

processResources {
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        def valueMap = [
                "id"                  : project.mod_id,
                "name"                : project.mod_name,
                "version"             : project.mod_version,
                "minecraft_dependency": project.minecraft_dependency,
        ]
        expand valueMap
    }
}

// https://github.com/Fallen-Breath/yamlang
yamlang {
    targetSourceSets = [sourceSets.main]
    inputDir = 'assets/elytratrims/lang'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
    withSourcesJar()
}

jar {
    from(rootProject.file('LICENSE')) {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

modrinth {
    token = env.MODRINTH_TOKEN.value
    projectId = "elytra-trims"
    versionName = "Elytra Trims " + project.mod_version + " for " + project.game_versions
    versionNumber = project.mod_version
    versionType = "release"
    uploadFile = remapJar
    additionalFiles = [sourcesJar]
    gameVersions = project.modrinth_versions.split(" ").toList()
    loaders = ["fabric", "quilt"]
    dependencies {
        required.project "fabric-api"
        optional.project "cloth-config"
        optional.project "yacl"
    }
    syncBodyFrom = rootProject.file("README.md").text
    changelog = rootProject.file("CHANGELOG.md").text
    debugMode = true
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId archivesBaseName

            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
